#macro (insertLicenseArtifactTopic $license)
    #set($folder=$inventory.getLicenseFolder($license))
    #set($licenseDataList=$inventory.evaluateComponents($license))
    #if(!$licenseDataList.isEmpty())
    <topic id="tpc_effective_license_$inventory.deriveLicenseId($license)">
        <title>$report.xmlEscapeLicense($license)</title>
        <body>
            <p>
                $utils.getText("inventory-report-bom.license-artifact-topic")
                #if($folder)
                    $utils.getText("inventory-report-bom.license-artifact-topic-location")
                    <xref href="$report.getRelativeLicensePath()/$folder/" type="html" scope="external">$license
                        [external]</xref>.
                #end
            </p>
            <p>
                <table otherprops="wide">
                    <title>$utils.getText("inventory-report-bom.short.components-under") $license.trim()$reportContext.withTitle()</title>
                    <tgroup cols="3">
                        <colspec colname="COLSPEC0" colnum="1" colwidth="20*"/>
                        <colspec colname="COLSPEC1" colnum="2" colwidth="60*"/>
                        <colspec colname="COLSPEC2" colnum="3" colwidth="20*"/>
                        <thead>
                            <row>
                                <entry colname="COLSPEC0" valign="top">$utils.getText("general.short.component")</entry>
                                <entry colname="COLSPEC1" valign="top">$utils.getText("general.short.artifacts") / $utils.getText("general.short.packages") / $utils.getText("general.short.web-modules")</entry>
                                <entry colname="COLSPEC2" valign="top">Version</entry>
                            </row>
                        </thead>
                        <tbody>
                            #foreach($licenseData in $licenseDataList)
                                #set($hasNotice=$inventory.hasNotice($licenseData))
                                #foreach($artifact in $licenseData.getArtifacts())
                                    #set($rows=$licenseData.getArtifacts().size())
                                    #set($rows=$rows - 1)
                                    <row>
                                        <entry>
                                            #if($hasNotice)
                                                <xref href="tpc_inventory-component-license-details.dita#tpc_component_notice_$inventory.deriveLicenseId($artifact.getComponent())" type="topic">
                                                    $report.xmlEscapeString($artifact.getComponent())
                                                </xref>
                                            #else
                                                $report.xmlEscapeString($artifact.getComponent())
                                            #end
                                        </entry>
                                        <entry>
                                            #if($artifact.getGroupId())<lines><line><i>$artifact.getGroupId() / $artifact.getArtifactId()</i></line>
                                                <line><codeph>$report.xmlEscapeArtifactId($artifact.getId())</codeph></line></lines>
                                            #else
                                                <codeph>$report.xmlEscapeArtifactId($artifact.getId())</codeph>
                                            #end
                                        </entry>
                                        <entry>
                                            <codeph>$report.xmlEscapeGAV($artifact.getVersion())</codeph>
                                        </entry>
                                    </row>
                                #end
                            #end
                        </tbody>
                    </tgroup>
                </table>
            </p>
        </body>
    </topic>
    #end
#end
#macro (insertLicenseTable $id $title $atomicTerms $handleSubstructure)
<table id="$id">
<title>$title$reportContext.inContextOf()</title>
<tgroup cols="5">
    <colspec colname="COLSPEC0" colnum="1" colwidth="50*" />
    <colspec colname="COLSPEC1" colnum="2" colwidth="18*" />
    <colspec colname="COLSPEC2" colnum="3" colwidth="13*" />
    <colspec colname="COLSPEC3" colnum="4" colwidth="11*" />
    <colspec colname="COLSPEC4" colnum="5" colwidth="8*" />
    <thead>
        <row>
            <entry colname="COLSPEC0" valign="top">Effektive Lizenz</entry>
            <entry colname="COLSPEC1" valign="top">SPDX Id</entry>
            <entry colname="COLSPEC2" valign="top">OSI Status</entry>
            <entry colname="COLSPEC3" valign="top">Open CoDE Freigabe</entry>
            <entry colname="COLSPEC4" valign="top">Anzahl</entry>
        </row>
    </thead>
#if($report.isIncludeInofficialOsiStatus())
#set($osiStatusMap = {
    "approved" : "anerkannt",
    "submitted" : "eingereicht",
    "not submitted" : "nicht eingereicht",
    "pending" : "ausstehend",
    "withdrawn" : "zur&#252;ckgezogen",
    "rejected" : "abgelehnt",
    "ineligible" : "ungeeignet",
    "unclear" : "unklar"
})
#else
#set($osiStatusMap = {
    "approved" : "anerkannt"
})
#end
#set($openCoDEStatusMap = {
    "approved" : "ja",
    "(approved)" : "ja",
    "not approved" : "nein"
})
#set($openCoDESimilarMap = {
    "(approved)" : "x"
})
    #set($approved="approved")
    <tbody>
        #foreach($licenseData in $atomicTerms)
            #set($license=$licenseData.get("Canonical Name"))
            #if (!$license.contains(" + "))
                #set($licenseData=$inventory.findMatchingLicenseData($license))
                #set($componentCount=$inventory.countComponents($license))
                #set($openCoDEMappedStatus=$reportContext.map($licenseData.get("Open CoDE Status"), $openCoDEStatusMap))
                #set($openCoDESimilar=$reportContext.map($licenseData.get("Open CoDE Status"), $openCoDESimilarMap))
                <row>
                    #if ($handleSubstructure && $inventory.isSubstructureRequired($license, $effectiveLicensesRepresented))
                        <entry>
                            <xref href="tpc_inventory-license-usage.dita#tpc_effective_license_$inventory.deriveLicenseId($license)" type="topic">
                                $report.xmlEscapeLicense($license)<xref href="#tpc_license-summary-$reportContext.id/id-footnote" type="fn"/>
                            </xref>
                        </entry>
                        <entry>#if ($licenseData && $utils.notEmpty($licenseData.get('SPDX Id')))$report.xmlEscapeString($licenseData.get('SPDX Id'))#else&nbsp;#end</entry>
                        <entry>#if ($licenseData)
                            #set($mappedStatus=$reportContext.map($licenseData.get("OSI Status"), $osiStatusMap))
                            #if ($mappedStatus)$mappedStatus<xref href="#tpc_license-summary-$reportContext.id/id-footnote" type="fn"/>#end
                        #else&nbsp;#end</entry>
                        <entry>#if ($licenseData)
                            #if ($assetData.isIncludesOpenCoDESimilarLicense() && $utils.notEmpty($openCoDESimilar))
                                #if ($openCoDEMappedStatus)$openCoDEMappedStatus<xref href="#tpc_license-summary-$reportContext.id/id-opencode-similar" type="fn"/>#end
                            #else
                                #if ($openCoDEMappedStatus)$openCoDEMappedStatus#end
                            #end
                        #else&nbsp;#end</entry>
                    #else
                        <entry>
                            <xref href="tpc_inventory-license-usage.dita#tpc_effective_license_$inventory.deriveLicenseId($license)" type="topic">
                                $report.xmlEscapeLicense($license)
                            </xref>
                        </entry>
                        <entry>#if ($licenseData && $utils.notEmpty($licenseData.get('SPDX Id')))$report.xmlEscapeString($licenseData.get('SPDX Id'))#else&nbsp;#end</entry>
                        <entry>#if ($licenseData)$reportContext.map($licenseData.get("OSI Status"), $osiStatusMap, "&nbsp;")#else&nbsp;#end</entry>
                        <entry>#if ($licenseData)
                            #if ($assetData.isIncludesOpenCoDESimilarLicense() && $utils.notEmpty($openCoDESimilar))
                                #if ($openCoDEMappedStatus)$openCoDEMappedStatus<xref href="#tpc_license-summary-$reportContext.id/id-opencode-similar" type="fn"/>#end
                            #else
                                #if ($openCoDEMappedStatus)$openCoDEMappedStatus#end
                            #end
                        #else&nbsp;#end</entry>
                    #end
                    <entry>
                        <xref href="tpc_inventory-license-usage.dita#tpc_effective_license_$inventory.deriveLicenseId($license)" type="topic">
                            <codeph>$componentCount</codeph>
                        </xref>
                    </entry>
                </row>
            #end
        #end
    </tbody>
</tgroup>
</table>
#end
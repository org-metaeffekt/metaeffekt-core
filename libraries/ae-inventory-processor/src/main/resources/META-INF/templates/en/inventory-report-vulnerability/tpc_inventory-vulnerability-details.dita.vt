#parse("META-INF/templates/en/labels-vulnerability-assessment/macros/labels.vm")
#parse("META-INF/templates/en/inventory-report-vulnerability/macros/inventory-report-vulnerabilities.vm")
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="tpc_vulnerability-summary-$reportContext.id">
    <title>$reportContext.combinedTitle("Vulnerability Details", true)</title>
##
#set($vulnerabilities = $vulnerabilityAdapter.getEffectiveVulnerabilitiesForDetails())
##
#if($vulnerabilities.isEmpty())
    <body>
        <p>
            No vulnerabilities have been identified.
        </p>
    </body>
#else
    <body>
        <p>
            Details are provided for vulnerabilities which are either potential vulnerabilities or which have
            third-party advisories.
        </p>
    </body>

#foreach($vulnerability in $vulnerabilities)
##
    #set ($vulnerabilityName = $vulnerability.getId())
    #set ($vulnerabilityNameTextEscaped = $report.xmlEscapeString($vulnerabilityName))
    #set ($vulnerabilityNameIdEscaped = $report.xmlEscapeStringAttribute($vulnerabilityName))
##
    #set ($allAdvisories     = $vulnerabilityAdapter.getEffectiveSecurityAdvisoriesForVulnerability($vulnerability))
    #set ($advisoriesAlerts  = $vulnerability.getRelatedAdvisoriesOfType("alert", $allAdvisories))
    #set ($advisoriesNotices = $vulnerability.getRelatedAdvisoriesOfType("notice", $allAdvisories))
    #set ($advisoriesNews    = $vulnerability.getRelatedAdvisoriesOfType("news", $allAdvisories))
    #set ($otherAdvisories   = $vulnerabilityAdapter.getRelatedAdvisoriesExcluding($allAdvisories, $advisoriesAlerts, $advisoriesNotices, $advisoriesNews))
    <topic id="$vulnerabilityName">
        <title>$vulnerabilityName</title>
        <body>
##
            <section>
                <title>Description</title>
                <body>
                    <p>$report.xmlEscapePreformattedContentString($vulnerability.getDescription())</p>
                    #referenceTable("${vulnerabilityNameIdEscaped}_ref", "$vulnerabilityNameTextEscaped References", $vulnerability)
                </body>
            </section>

            <section>
                <title>Affected Assets</title>
                <body>
                    #set($affectedAssets = $vulnerabilityAdapter.getAffectedAssets($vulnerability.getAffectedArtifactsByDefaultKey()))
                    #set($title = "${vulnerabilityNameTextEscaped} Affected Assets")
                    #affectedAssetsTable($vulnerability, $affectedAssets, $title)
                </body>
            </section>

            <section>
                <title>Affected Components</title>
                <body>
                    #set($affectedComponents = $vulnerability.getAffectedArtifactsByDefaultKey())
                    #set($title = "${vulnerabilityNameTextEscaped} Affected Components")
                    #affectedComponentsTable($vulnerability, $affectedComponents, $title)
                </body>
            </section>
##

#if ($utils.notEmpty($vulnerability.getCweString()))
            <section>
                <title>Weakness</title>
                <body>
                    $report.xmlEscapeString($vulnerability.getCweString())
                </body>
            </section>
#end
            <section>
                <title>Initial Severity</title>
                <body>
#if ($vulnerability.getCvssSelectionResult().hasInitialCvss())
                    <p>
                        #cvssScoreOverviewTable("${vulnerabilityNameIdEscaped}_severity", "$vulnerabilityNameTextEscaped Initial Severity", $vulnerability, false)
                    </p>
                    <p>
                        #cvssScoreDetailsTable("${vulnerabilityNameIdEscaped}_severity_details", "$vulnerabilityNameTextEscaped Initial Severity Details", $vulnerability, false)
                    </p>
#else
                    <p>
                        The vulnerability does not provide any CVSS severity information.
                    </p>
#end
                </body>
            </section>

        </body>

        <topic id="${vulnerabilityName}-advisories">
            <title>Advisories</title>
            <body>
#if ($advisoriesAlerts.isEmpty() && $advisoriesNotices.isEmpty() && $advisoriesNews.isEmpty() && $otherAdvisories.isEmpty())
                <p>
                    No security advisories have been identified.
                </p>
#end
#if (!$advisoriesAlerts.isEmpty())
            <section>
                <title>Alerts</title>
                <p>
#advisoryOverview("${vulnerabilityNameIdEscaped}_alerts", "$vulnerabilityNameTextEscaped Alerts", $advisoriesAlerts)
                </p>
            </section>
#end
#if (!$advisoriesNotices.isEmpty())
            <section>
                <title>Notices</title>
                <p>
#advisoryOverview("${vulnerabilityNameIdEscaped}_notices", "$vulnerabilityNameTextEscaped Notices", $advisoriesNotices)
                </p>
            </section>
#end
#if (!$advisoriesNews.isEmpty())
            <section>
                <title>Updates</title>
                <p>
#advisoryOverview("${vulnerabilityNameIdEscaped}_updates", "$vulnerabilityNameTextEscaped Updates", $advisoriesNews)
                </p>
            </section>
#end
#if (!$otherAdvisories.isEmpty())
            <section>
                <title>Other</title>
                <p>
#advisoryOverview("${vulnerabilityNameIdEscaped}_other_advisories", "$vulnerabilityNameTextEscaped Other advisories", $otherAdvisories)
                </p>
            </section>
#end
            </body>
        </topic>
        <topic id="$vulnerability.getId()-assessment">
            <title>Assessment</title>
            <body>
                <section>
                    <title>Summary</title>
                    <body>
                        <p>
                            #set ($assessmentSummaryLabels = $vulnerabilityAdapter.getVulnerabilityStatusLabels($vulnerability))
                            #set ($displaySeverity = $vulnerabilityAdapter.shouldDisplayEffectiveVulnerabilityStatusCvssSeverity($vulnerability))
##
                            #foreach ($label in $assessmentSummaryLabels)
                                #labelRef($label)
                            #end
##
                            #if ($displaySeverity)
                                #set ($cvssVector = $vulnerability.getCvssSelectionResult().getSelectedContextIfAvailableOtherwiseInitial())
                                #if ($cvssVector)
                                    #labelRef($vulnerabilityAdapter.getSeverityForVectorScore($cvssVector.getOverallScore()).getName())
                                #end
                            #end
                        </p>
                    </body>
                </section>
##
#if ($vulnerability.getCvssSelectionResult().hasContextCvss())
                <section>
                    <title>Context Severity</title>
                    <body>
                        <p>
                            #cvssScoreOverviewTable("${vulnerabilityNameIdEscaped}_modified_severity", "$vulnerabilityNameTextEscaped Context Severity", $vulnerability, true)
                        </p>
                        <p>
                            #cvssScoreDetailsTable("${vulnerabilityNameIdEscaped}_modified_severity_details", "$vulnerabilityNameTextEscaped Context Severity Details", $vulnerability, true)
                        </p>
                    </body>
                </section>
#end

#cvssScoreChartsTable("${vulnerabilityNameIdEscaped}_severity_charts", "$vulnerabilityNameTextEscaped Severity Charts", $vulnerability)

#vulnerabilityStatusDetails($vulnerability)

            </body>
        </topic>

## priority section
        <topic id="$vulnerability.getId()-priority">
            <title>Priority</title>
            <body>
                #vulnerabilityPriorityScoreTable($vulnerability, $vulnerabilityAdapter.getSecurityPolicy())
            </body>
        </topic>
    </topic>
#end
#end
</topic>

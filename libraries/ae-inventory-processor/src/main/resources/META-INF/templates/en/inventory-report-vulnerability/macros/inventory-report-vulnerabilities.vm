## do not insert blank lines in between macros. as this document is loaded before the XML tag of the main document,
## this will result in the empty lines appearing at the head of the document, which is not allowed in XML.
#macro (vulnerabilityOverview $id $title $vulnerabilities $listVulnerabilityStatus)
#set ($cvssScoringPreference=$report.getCvssScoringPreference())
##
<table id="$id">
    <title>$title</title>
    #if ($listVulnerabilityStatus)
    <tgroup cols="7">
        <colspec colname="COLSPEC0" colnum="1" colwidth="22*" />
        <colspec colname="COLSPEC1" colnum="2" colwidth="6*" />
        <colspec colname="COLSPEC2" colnum="3" colwidth="9*" />
        <colspec colname="COLSPEC3" colnum="4" colwidth="30*" />
        <colspec colname="COLSPEC4" colnum="5" colwidth="11*" />
        <colspec colname="COLSPEC5" colnum="6" colwidth="11*" />
        <colspec colname="COLSPEC6" colnum="7" colwidth="11*" />
    #else
    <tgroup cols="5">
        <colspec colname="COLSPEC0" colnum="1" colwidth="22*" />
        <colspec colname="COLSPEC1" colnum="2" colwidth="6*" />
        <colspec colname="COLSPEC2" colnum="3" colwidth="9*" />
        <colspec colname="COLSPEC3" colnum="4" colwidth="52*" />
        <colspec colname="COLSPEC4" colnum="5" colwidth="11*" />
    #end
        <thead>
            <row>
                <entry colname="COLSPEC0" valign="top">Name</entry>
                <entry colname="COLSPEC1" valign="top">Score</entry>
                <entry colname="COLSPEC2" valign="top">Score<sub>mod</sub></entry>
                <entry colname="COLSPEC3" valign="top">Alerts / Notices / Updates</entry>
                <entry colname="COLSPEC4" valign="top">Severity</entry>
#if ($listVulnerabilityStatus)
                <entry colname="COLSPEC5" valign="top">Severity<sub>mod</sub></entry>
                <entry colname="COLSPEC6" valign="top">Status</entry>
#end
            </row>
        </thead>

        <tbody>
#foreach ($vulnerability in $vulnerabilities)
            <row>
                <entry>
                    #if ($vulnerability.get("Product URIs"))<lines><line><i>$report.xmlEscapeString($vulnerability.get("Product URIs"))</i></line>
                        <line>#if ($vulnerabilityAdapter.hasDetails($vulnerability, $threshold))<xref href="tpc_inventory-vulnerability-details.dita#$vulnerability.get("Name")" type="topic"><codeph>$report.xmlEscapeString($vulnerability.get("Name"))</codeph></xref>#else<xref href="$vulnerability.get("Url")" type="html" scope="external"><codeph>$report.xmlEscapeString($vulnerability.get("Name"))</codeph></xref>#end</line></lines>
                    #else<lines><line>#if ($vulnerabilityAdapter.hasDetails($vulnerability, $threshold))<xref href="tpc_inventory-vulnerability-details.dita#$vulnerability.get("Name")" type="topic"><codeph>$report.xmlEscapeString($vulnerability.get("Name"))</codeph></xref>#else<xref href="$vulnerability.get("Url")" type="html" scope="external"><codeph>$report.xmlEscapeString($vulnerability.get("Name"))</codeph></xref>#end</line></lines>#end
                </entry>

## since AEAA-242: use the CVSS scoring preference to determine which score to display
                <entry>$vulnerabilityAdapter.getUnmodifiedCvssScoreByScoringPreference($vulnerability, $cvssScoringPreference)</entry>

                <entry>$vulnerabilityAdapter.getModifiedCvssScoreByScoringPreference($vulnerability, $cvssScoringPreference)</entry>

                <entry>$vulnerabilityAdapter.hyperlinkedAdvisories($vulnerabilityAdapter.getAdvisories($vulnerability))</entry>


#set ($cvssStatusUnmodified = $vulnerabilityAdapter.getUnmodifiedCvssSeverityByScoringPreference($vulnerability, $cvssScoringPreference))
#if ($utils.notEmpty($cvssStatusUnmodified) && !$cvssStatusUnmodified.equals("N/A"))
                <entry>#labelRef($cvssStatusUnmodified)</entry>
#else
                <entry>&nbsp;</entry>
#end

## only include modified severity and vulnerability status (if present) in 'Potential Vulnerabilities' table
#if ($listVulnerabilityStatus)
                #set ($cvssStatusModified = $vulnerabilityAdapter.getModifiedCvssSeverityByScoringPreference($vulnerability, $cvssScoringPreference))
                #if ($utils.notEmpty($cvssStatusModified) && !$cvssStatusModified.equals("N/A"))
                    <entry>#labelRef($cvssStatusModified)</entry>
                #else
                    <entry>&nbsp;</entry>
                #end

                <entry>
                #if ($utils.notEmpty($vulnerability.get("Status")))
                    #labelRef("Reviewed")
                #else
                    #labelRef("In Review")
                #end
                </entry>
#end


            </row>
#end
        </tbody>
    </tgroup>
</table>
#end
#macro (advisoryOverview $id $title $advisories)
<table id="$id">
    <title>$title</title>
    <tgroup cols="4">
        <colspec colname="COLSPEC0" colnum="1" colwidth="20*" />
        <colspec colname="COLSPEC1" colnum="2" colwidth="56*" />
        <colspec colname="COLSPEC2" colnum="3" colwidth="12*" />
        <colspec colname="COLSPEC3" colnum="4" colwidth="12*" />
        <thead>
        <row>
            <entry colname="COLSPEC0" valign="top">Id</entry>
            <entry colname="COLSPEC1" valign="top">Summary</entry>
            <entry colname="COLSPEC2" valign="top">Create Date</entry>
            <entry colname="COLSPEC3" valign="top">Update Date</entry>
        </row>
        </thead>
        <tbody>
#foreach ($advisory in $advisories)
            <row>
                <entry>$vulnerabilityAdapter.hyperlinkedAdvisory($advisory)</entry>
                <entry>$report.xmlEscapePreformattedContentString($advisory.summary)</entry>
                <entry>$report.xmlEscapeString($advisory.createDate)</entry>
                <entry>$report.xmlEscapeString($advisory.updateDate)</entry>
            </row>
#end
        </tbody>
    </tgroup>
</table>
#end
##
## generates a table from the references listed in the vulnerability instance.
## a reference consists of a link that leads to a resource and a target that describes who the target host is.
##
## Target       Hyperlink
## NVD          https://nvd.nist.gov/vuln/detail/CVE-2021-44228
## MITRE        https://www.cve.org/CVERecord?id=CVE-2021-44228
## CVE Details  https://www.cvedetails.com/cve/CVE-2021-44228
##
#macro (referenceTable $id $title $vulnerability)
<table id="$id">
    <title>$title</title>
    <tgroup cols="2">
        <colspec colname="COLSPEC0" colnum="1" colwidth="30*" />
        <colspec colname="COLSPEC1" colnum="2" colwidth="80*" />
        <thead>
        <row>
            <entry colname="COLSPEC0" valign="top">Target</entry>
            <entry colname="COLSPEC1" valign="top">Hyperlink</entry>
        </row>
        </thead>
        <tbody>
            #if ($vulnerability.get("Source").equalsIgnoreCase("NVD"))
            <row>
                <entry>NVD</entry>
                <entry><xref href="$vulnerability.get("Url")" type="html" scope="external"/></entry>
            </row>
            <row>
                <entry>MITRE</entry>
                <entry><xref href="https://www.cve.org/CVERecord?id=$vulnerabilityName" type="html" scope="external" /></entry>
            </row>
            <row>
                <entry>CVE Details</entry>
                <entry><xref href="https://www.cvedetails.com/cve/$vulnerabilityName" type="html" scope="external" /></entry>
            </row>
            #else
            <row>
                <entry></entry>
                <entry><xref href="$report.xmlEscapePreformattedContentString($vulnerability.get("Url"))" type="html" scope="external" /></entry>
            </row>
            #end
        </tbody>
    </tgroup>
</table>
#end
##
## checks if the attribute exists on the vulnerability and if:
## - true:  generates a svg label from the contents
## - false: returns a &nbsp;
##
#macro (labelFromInventoryAttribute $vulnerability $attribute)
    #if ($utils.notEmpty($vulnerability.get($attribute)))
        #set ($labelText=$vulnerability.get($attribute))
        #labelRef($labelText)
    #else
    &nbsp;
    #end
#end
##
## generates a codeph element that contains a reference to the NVD or FIRST, depending on the vector provided.
##
#macro (cvssVectorLink $vulnerability $version $modified)
    ## get the vector text
    #if ($modified)
        #set ($vector = $report.xmlEscapeContentString($vulnerability.get("CVSS Modified Vector (v$version)")))
    #else
        #set ($vector = $report.xmlEscapeContentString($vulnerability.get("CVSS Vector (v$version)")))
    #end
    ## build the link by checking what version/modified information the vector has
    #if ($utils.notEmpty($vector))
        #if ($version.equals("2"))
            #set ($link = "https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator?version=2.0&amp;vector=($vector)")
        #elseif ($version.equals("3"))
            #if ($modified)
                #set ($link = "https://www.first.org/cvss/calculator/3.1#$vector")
            #else
                #set ($link = "https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?version=3.1&amp;vector=$vector")
            #end
        #else
            #set ($link = "https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator")
        #end
    <codeph><xref href="$link" type="html" scope="external">$vector</xref></codeph>
    #end
#end
##
## Generates a table that contains the base CVSS Vector information without the details of base, impact, exploitability
##
## Scheme     Overall  CVSS Vector                                   Severity
## CVSS v2.0  9.3      AV:N/AC:M/Au:N/C:C/I:C/A:C                    Critical
## CVSS v3.x  10.0     CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H  Critical
##
## If a vector is not present, it will skip the row.
##
#macro (cvssScoreOverviewTable $id $title $vulnerability $modifiedScores)
    ## to minimize the amount of checks made inline, generate the inventory column identifiers beforehand
    #if ($modifiedScores)
        #set ($columnNameVector = "CVSS Modified Vector")
        #set ($columnNameScoreOverall = "CVSS Modified Overall")
        #set ($columnNameSeverity = "CVSS Modified Severity")
    #else
        #set ($columnNameVector = "CVSS Vector")
        #set ($columnNameScoreOverall = "CVSS Unmodified Overall")
        #set ($columnNameSeverity = "CVSS Unmodified Severity")
    #end
    ##
    #set ($hasCvssV2 = $utils.notEmpty($vulnerability.get("$columnNameVector (v2)")))
    #set ($hasCvssV3 = $utils.notEmpty($vulnerability.get("$columnNameVector (v3)")))
    ##
<table id="$id">
    <title>$title</title>
    <tgroup cols="4">
        <colspec colname="COLSPEC0" colnum="1" colwidth="10*" />
        <colspec colname="COLSPEC1" colnum="2" colwidth="8*" />
        <colspec colname="COLSPEC2" colnum="3" colwidth="70*" />
        <colspec colname="COLSPEC3" colnum="4" colwidth="12**" />
        <thead>
        <row>
            <entry colname="COLSPEC0" valign="top">Scheme</entry>
            <entry colname="COLSPEC1" valign="top">Overall</entry>
            <entry colname="COLSPEC2" valign="top">CVSS Vector</entry>
            <entry colname="COLSPEC3" valign="top">Severity</entry>
        </row>
        </thead>
        <tbody>
            ##
            ## v2
            #if ($hasCvssV2)
            <row>
                <entry>CVSS v2.0</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreOverall (v2)"))</entry>
                <entry>#cvssVectorLink($vulnerability, "2", $modifiedScores)</entry>
                <entry>#labelFromInventoryAttribute($vulnerability, "$columnNameSeverity (v2)")</entry>
            </row>
            #end
            ##
            ## v3
            #if ($hasCvssV3)
            <row>
                <entry>CVSS v3.x</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreOverall (v3)"))</entry>
                <entry>#cvssVectorLink($vulnerability, "3", $modifiedScores)</entry>
                <entry>#labelFromInventoryAttribute($vulnerability, "$columnNameSeverity (v3)")</entry>
            </row>
            #end
        </tbody>
    </tgroup>
</table>
#end
##
## Generates a table that contains detailed CVSS Vector information, excluding away overall score, vector and severtity.
## Exploitability, Temporal, Environmental and Adjusted impact are not included when non-modified scores are listed
##
## Scheme     Base  Impact  Exploitability  Temporal  Environmental  Adjusted impact
## CVSS v2.0  9.3   8.6     10.0                      7.2            10.0
## CVSS v3.x  10.0  3.9     6.0             10.0      9.1            6.1
##
## If a vector is not present, it will skip the row.
##
#macro (cvssScoreDetailsTable $id $title $vulnerability, $modifiedScores)
    ## to minimize the amount of checks made inline, generate the inventory column identifiers beforehand
    #if ($modifiedScores)
        #set ($columnNameVector              = "CVSS Modified Vector")
        #set ($columnNameScoreBase           = "CVSS Modified Base")
        #set ($columnNameScoreExploitability = "CVSS Modified Exploitability")
        #set ($columnNameScoreImpact         = "CVSS Modified Impact")
    #else
        #set ($columnNameVector              = "CVSS Vector")
        #set ($columnNameScoreBase           = "CVSS Base")
        #set ($columnNameScoreExploitability = "CVSS Exploitability")
        #set ($columnNameScoreImpact         = "CVSS Impact")
    #end
    ## these are the same for both modified and unmodified
    #set ($columnNameScoreTemporal       = "CVSS Temporal")
    #set ($columnNameScoreEnvironmental  = "CVSS Environmental")
    #set ($columnNameScoreAdjustedImpact = "CVSS Adjusted Impact")
    ##
    #set ($hasCvssV2 = $utils.notEmpty($vulnerability.get("$columnNameVector (v2)")))
    #set ($hasCvssV3 = $utils.notEmpty($vulnerability.get("$columnNameVector (v3)")))
    ##
<table id="$id">
    <title>$title</title>
    ## decide how many columns are required to display the required information and adjust the column sizes
    #if ($modifiedScores)
    <tgroup cols="7">
        <colspec colname="COLSPEC1" colnum="1" colwidth="10*" />
        <colspec colname="COLSPEC2" colnum="2" colwidth="7*" />
        <colspec colname="COLSPEC3" colnum="3" colwidth="7*" />
        <colspec colname="COLSPEC4" colnum="4" colwidth="8*" />
        <colspec colname="COLSPEC5" colnum="5" colwidth="8*" />
        <colspec colname="COLSPEC6" colnum="6" colwidth="8*" />
        <colspec colname="COLSPEC7" colnum="7" colwidth="9**" />
    #else
    <tgroup cols="4">
        <colspec colname="COLSPEC1" colnum="1" colwidth="10*" />
        <colspec colname="COLSPEC2" colnum="2" colwidth="7*" />
        <colspec colname="COLSPEC3" colnum="3" colwidth="7*" />
        <colspec colname="COLSPEC4" colnum="4" colwidth="8**" />
    #end
    ##
        <thead>
        <row>
            <entry colname="COLSPEC1" valign="top">Scheme</entry>
            <entry colname="COLSPEC2" valign="top">Base</entry>
            <entry colname="COLSPEC3" valign="top">Impact</entry>
            <entry colname="COLSPEC4" valign="top">Exploitability</entry>
            #if ($modifiedScores)
                <entry colname="COLSPEC5" valign="top">Temporal</entry>
                <entry colname="COLSPEC6" valign="top">Environmental</entry>
                <entry colname="COLSPEC7" valign="top">Adjusted impact</entry>
            #end
        </row>
        </thead>
        <tbody>
            ##
            ## v2
            #if ($hasCvssV2)
            <row>
                <entry>CVSS v2.0</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreBase (v2)"))</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreImpact (v2)"))</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreExploitability (v2)"))</entry>
                #if ($modifiedScores)
                    <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreTemporal (v2)"))</entry>
                    <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreEnvironmental (v2)"))</entry>
                    <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreAdjustedImpact (v2)"))</entry>
                #end
            </row>
            #end
            ##
            ## v3
            #if ($hasCvssV3)
            <row>
                <entry>CVSS v3.x</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreBase (v3)"))</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreImpact (v3)"))</entry>
                <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreExploitability (v3)"))</entry>
                #if ($modifiedScores)
                    <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreTemporal (v3)"))</entry>
                    <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreEnvironmental (v3)"))</entry>
                    <entry>$report.xmlEscapeString($vulnerability.get("$columnNameScoreAdjustedImpact (v3)"))</entry>
                #end
            </row>
            #end
        </tbody>
    </tgroup>
</table>
#end
##
## has three possible states:
## - both unmodified and modified charts are present: generate a table with two charts
## - only unmodified or modified is present:          generate a table with a single chart
## - no charts are present:                           do not generate anything in this case
##
## the charts are SVGs stored in files in the resources directory. they are either generated when the VAD is generated
## or when the dedicated goal from artifact-analysis is called.
##
#macro (cvssScoreChartsTable $id $title $vulnerability)
    #set ($vulnerabilityName=$vulnerability.get("Name"))
    ## the chart is a file in the resources directory
    #set ($chartModifiedFilePath     = "resources/svg/cvss_modified_${vulnerabilityName}.svg")
    #set ($chartModifiedFileExists   = $vulnerabilityAdapter.fileExists("${targetReportDir}/${chartModifiedFilePath}"))
    #set ($chartUnmodifiedFilePath   = "resources/svg/cvss_unmodified_${vulnerabilityName}.svg")
    #set ($chartUnmodifiedFileExists = $vulnerabilityAdapter.fileExists("${targetReportDir}/${chartUnmodifiedFilePath}"))
    ##
    ##
    #if ($chartUnmodifiedFileExists || $chartModifiedFileExists)
    <table id="$id">
        <title>$title</title>
        <tgroup cols="2">
            <colspec colname="COLSPEC1" colnum="1" colwidth="50*" />
            <colspec colname="COLSPEC2" colnum="2" colwidth="50*" />
            <thead>
            <row>
                <entry colname="COLSPEC1" valign="top">Unmodified CVSS</entry>
                <entry colname="COLSPEC2" valign="top">Modified CVSS</entry>
            </row>
            </thead>
        <tbody>
        <row>
            #if ($chartUnmodifiedFileExists)
                <entry>
                    <image href="$chartUnmodifiedFilePath" width="260" alt="$title Unmodified" align="center"/>
                </entry>
            #else
                <entry>The unmodified CVSS score chart is not available.</entry>
            #end
            #if ($chartModifiedFileExists)
                <entry>
                    <image href="$chartModifiedFilePath" width="260" alt="$title Modified" align="center"/>
                </entry>
            #else
                <entry>The modified CVSS score chart is not available.</entry>
            #end
        </row>
        </tbody>
    </tgroup>
    </table>
    #end
#end
##
##
##
#macro(affectedComponentsTable $vulnerability $affectedComponents $title)
    #if ($affectedComponents.size() > 0)
        #if ($vulnerability)
            #set ($vulnerabilityName = $vulnerability.get("Name"))
        #else
            #set ($vulnerabilityName = "")
        #end
        #set ($containsMsRemediationInformation = $vulnerabilityAdapter.hasVulnerabilityMicrosoftRemediationInformationOnArtifact($vulnerability, $affectedComponents))

        #if ($utils.notEmpty($vulnerabilityName))
        <table id="${vulnerabilityName}_affected_components">
        #else
        <table id="$title">
        #end

        <title>$title</title>
        #if ($containsMsRemediationInformation)
        <tgroup cols="4">
            <colspec colname="COLSPEC0" colnum="1" colwidth="30*"/>
            <colspec colname="COLSPEC1" colnum="2" colwidth="40*"/>
            <colspec colname="COLSPEC2" colnum="3" colwidth="14*"/>
            <colspec colname="COLSPEC3" colnum="4" colwidth="16*"/>
        #else
        <tgroup cols="3">
            <colspec colname="COLSPEC0" colnum="1" colwidth="40*"/>
            <colspec colname="COLSPEC1" colnum="2" colwidth="46*"/>
            <colspec colname="COLSPEC2" colnum="3" colwidth="14*"/>
        #end

        <thead>
        <row>
            <entry colname="COLSPEC0" valign="top">Component</entry>
            <entry colname="COLSPEC1" valign="top">Artifact Id</entry>
            <entry colname="COLSPEC2" valign="top">Version</entry>
            #if ($containsMsRemediationInformation)
                <entry colname="COLSPEC3" valign="top">MS Remediation</entry>
            #end
        </row>
        </thead>

        <tbody>
            #foreach ($artifact in $affectedComponents)
            <row>
                <entry>$report.xmlEscapeString($artifact.get("Component"))</entry>
                <entry>
                    <codeph>$report.xmlEscapeArtifactId($artifact.get("Id"))</codeph>
                </entry>
                <entry>
                    <codeph>$report.xmlEscapeGAV($artifact.get("Version"))</codeph>
                </entry>
                #if ($containsMsRemediationInformation)
                    <entry>
                        #set ($msRemediationKbIdentifiers=$vulnerabilityAdapter.getMicrosoftRemediationKBsForVulnerabilityOnArtifact($vulnerability, $artifact))
                        #if ($msRemediationKbIdentifiers.size() > 0)
                            <p>
## must be lowest indentation, otherwise CVS will not work
#set ($indexCounter=0)
#foreach ($kb in $msRemediationKbIdentifiers)
KB$kb
#set ($indexCounter=$indexCounter + 1)
#if ($indexCounter < $msRemediationKbIdentifiers.size() - 1)
,
#end
#end
                            </p>
                        #end
                        #set ($msRemediationUrlDescription=$vulnerabilityAdapter.getMicrosoftRemediationUrlAndDescriptionForVulnerabilityOnArtifact($vulnerability, $artifact))
                        #if ($msRemediationUrlDescription.size() > 0)
                            <p>
## must be lowest indentation, otherwise CVS will not work
#set ($indexCounter=0)
#foreach ($entry in $msRemediationUrlDescription.entrySet())
<xref href="$entry.getKey()" type="html" scope="external">$entry.getValue()</xref>
#set ($indexCounter=$indexCounter + 1)
#if ($indexCounter < $msRemediationUrlDescription.size() - 1)
,
#end
#end

                            </p>
                        #end
                    </entry>
                #end
            </row>
            #end
        </tbody>
    </tgroup>
    </table>
    #else
        There are no affected components for this vulnerability.
    #end
#end
##
##
#macro (statisticsOverviewTableUnmodified $id $title $filterCert $threshold $statusMapper)
#statisticsOverviewTable($id, $title, $filterCert, $threshold, false, $statusMapper)
#end
##
##
#macro (statisticsOverviewTableModified $id $title $filterCert $threshold $statusMapper)
#statisticsOverviewTable($id, $title, $filterCert, $threshold, true, $statusMapper)
#end
##
##
#macro (statisticsOverviewTable $id $title $filterCert $threshold $useModified $statusMapper)
    #if ($useModified)
        #set ($overviewTableData=$vulnerabilityAdapter.createModifiedStatisticsOverviewTable($filterCert, $threshold, $statusMapper))
    #else
        #set ($overviewTableData=$vulnerabilityAdapter.createUnmodifiedStatisticsOverviewTable($filterCert, $threshold, $statusMapper))
    #end
    #if(!$overviewTableData.isEmpty())
    <table id="$id">
        <title>$title</title>
        #set ($colWidth=76 / ($overviewTableData.getHeaders().size() - 2))
        <tgroup cols="$overviewTableData.getHeaders().size()">
            #set ($colIndex=1)
            <colspec colname="COLSPEC$colIndex" colnum="$colIndex" colwidth="12*" valign="middle" />
            #foreach ($header in $overviewTableData.getHeaders())
                #if ($colIndex != 1 && $colIndex != $overviewTableData.getHeaders().size())
                <colspec colname="COLSPEC$colIndex" colnum="$colIndex" colwidth="$colWidth*" valign="middle" />
                #end
                #set ($colIndex=$colIndex + 1)
            #end
            #set ($colIndex=$colIndex - 1)
            <colspec colname="COLSPEC$colIndex" colnum="$colIndex" colwidth="12*" valign="middle" />

            <thead>
            <row>
                #foreach ($header in $overviewTableData.getHeaders())
                    #set ($colIndex=$overviewTableData.getHeaders().indexOf($header) + 1)
                    <entry colname="COLSPEC$colIndex" valign="middle">$header</entry>
                #end
            </row>
            </thead>

            <tbody>
                #foreach ($severityCategory in $overviewTableData.getSeverityCategories())
                <row>
                    <entry valign="middle">
                        #set ($labelText=$vulnerabilityAdapter.modulateSeverityText($severityCategory))
                        #labelRef($labelText)
                    </entry>
                    #foreach ($severityCategoryPerCategoryCount in $overviewTableData.getCountsForSeverityCategory($severityCategory))
                        <entry valign="middle">$severityCategoryPerCategoryCount</entry>
                    #end
                </row>
                #end
            </tbody>
        </tgroup>
    </table>
    #end
#end
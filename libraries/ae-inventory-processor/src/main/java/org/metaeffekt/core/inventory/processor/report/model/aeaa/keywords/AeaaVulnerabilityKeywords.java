/*
 * Copyright 2009-2024 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.metaeffekt.core.inventory.processor.report.model.aeaa.keywords;

import lombok.Getter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.*;

/**
 * Reads a yaml file that contains a number of keyword sets and can check if a given string matches one of them.
 */
@Getter
public class AeaaVulnerabilityKeywords {

    private final Logger LOG = LoggerFactory.getLogger(AeaaVulnerabilityKeywords.class);

    private final List<AeaaKeywordSet> keywordSets = new ArrayList<>();

    public AeaaVulnerabilityKeywords() {
    }

    public AeaaVulnerabilityKeywords(List<AeaaKeywordSet> keywords) {
        keywordSets.addAll(keywords);
    }

    public void addKeywords(Collection<AeaaKeywordSet> keywords) {
        keywordSets.addAll(keywords);
    }

    public void addKeywords(AeaaKeywordSet... keywords) {
        keywordSets.addAll(Arrays.asList(keywords));
    }

    @Override
    public String toString() {
        StringBuilder stringBuilder = new StringBuilder();
        for (AeaaKeywordSet keywordSet : keywordSets) {
            if (stringBuilder.length() > 0) stringBuilder.append("\n");
            stringBuilder.append(keywordSet);
        }
        return stringBuilder.toString();
    }
}

/*
 * Copyright 2009-2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.metaeffekt.core.inventory.processor.report;

import org.junit.Assert;
import org.junit.Test;
import org.metaeffekt.core.inventory.processor.model.Inventory;
import org.metaeffekt.core.inventory.processor.model.VulnerabilityMetaData;

public class VulnerabilityReportAdapterTest {

    @Test
    public void getFurtherAbstractedVulnerabilityCategoryTest() {
        VulnerabilityReportAdapter adapter = new VulnerabilityReportAdapter(new Inventory());

        Assert.assertEquals("potentially affected", adapter.getFurtherAbstractedVulnerabilityCategory(null));
        Assert.assertEquals("potentially affected", adapter.getFurtherAbstractedVulnerabilityCategory(""));
        Assert.assertEquals("potentially affected", adapter.getFurtherAbstractedVulnerabilityCategory("in review"));

        Assert.assertEquals("affected", adapter.getFurtherAbstractedVulnerabilityCategory(VulnerabilityMetaData.STATUS_VALUE_APPLICABLE));

        Assert.assertEquals("not affected", adapter.getFurtherAbstractedVulnerabilityCategory(VulnerabilityMetaData.STATUS_VALUE_NOTAPPLICABLE));
        Assert.assertEquals("not affected", adapter.getFurtherAbstractedVulnerabilityCategory(VulnerabilityMetaData.STATUS_VALUE_VOID));
        Assert.assertEquals("not affected", adapter.getFurtherAbstractedVulnerabilityCategory(VulnerabilityMetaData.STATUS_VALUE_INSIGNIFICANT));
    }
}
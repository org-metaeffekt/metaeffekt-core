/*
 * Copyright 2009-2024 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.metaeffekt.core.inventory.processor.model;

import org.json.JSONObject;
import org.junit.Assert;
import org.junit.Test;
import org.metaeffekt.core.inventory.processor.report.model.aeaa.AeaaEpssData;
import org.metaeffekt.core.inventory.processor.report.model.aeaa.AeaaKevData;
import org.metaeffekt.core.inventory.processor.report.model.aeaa.AeaaVulnerability;
import org.metaeffekt.core.inventory.processor.report.model.aeaa.store.AeaaVulnerabilityTypeStore;

public class VulnerabilityMetaDataTest {

    @Test
    public void epssKevConversionTest() {
        final AeaaVulnerability vulnerability = new AeaaVulnerability("CVE-2020-1234");
        vulnerability.setSourceIdentifier(AeaaVulnerabilityTypeStore.CVE);

        vulnerability.setEpssData(new AeaaEpssData("CVE-2020-1234", 0.5, 0.6));
        vulnerability.setKevData(new AeaaKevData("CVE-2020-1234", AeaaKevData.RansomwareState.KNOWN));

        final AeaaVulnerability fromJson = AeaaVulnerability.fromJson(new JSONObject(vulnerability.toJson().toString()));
        Assert.assertEquals(vulnerability.getEpssData(), fromJson.getEpssData());
        Assert.assertEquals(vulnerability.getKevData(), fromJson.getKevData());

        final AeaaVulnerability fromAmb = AeaaVulnerability.fromVulnerabilityMetaData(vulnerability.toBaseModel());
        Assert.assertEquals(vulnerability.getEpssData(), fromAmb.getEpssData());
        Assert.assertEquals(vulnerability.getKevData(), fromAmb.getKevData());
    }
}

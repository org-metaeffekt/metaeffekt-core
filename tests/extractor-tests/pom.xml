<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.metaeffekt.core</groupId>
        <artifactId>ae-core-plugin-management-pom</artifactId>
        <version>HEAD-SNAPSHOT</version>
        <relativePath>../../poms/ae-core-plugin-management-pom</relativePath>
    </parent>

    <artifactId>ae-container-extractor-container-tests</artifactId>
    <packaging>pom</packaging>

    <properties>
        <artifact.inventory.enabled>false</artifact.inventory.enabled>

        <ae.extractor.analysis.dir>${project.build.directory}/analysis</ae.extractor.analysis.dir>
        <ae.extractor.script>/container-extractors/extract.sh</ae.extractor.script>
    </properties>

    <modules>
        <module>ae-alpine-container-test</module>
        <module>ae-arch-container-test</module>
        <module>ae-centos-container-test</module>
        <module>ae-debian-container-test</module>
        <module>ae-suse-container-test</module>
        <module>ae-ubuntu-container-test</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>unpack-container-scripts</id>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <phase>generate-sources</phase>
                            <configuration>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>org.metaeffekt.core</groupId>
                                        <artifactId>ae-inventory-maven-plugin</artifactId>
                                        <version>${project.version}</version>
                                    </artifactItem>
                                </artifactItems>
                                <includes>container-extractors/*.sh</includes>
                                <overWriteSnapshots>true</overWriteSnapshots>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <id>container-extractors-chmod</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <chmod perm="+x">
                                        <fileSet dir="${project.build.directory}/container-extractors" includes="**/*.sh" />
                                    </chmod>
                                    <mkdir dir="${project.build.directory}/analysis" />
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.4.0</version>
                    <executions>
                        <execution>
                            <id>run-inventory-extractor</id>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <phase>compile</phase>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>run</argument>
                                    <argument>--rm</argument>
                                    <argument>-i</argument>
                                    <argument>-v</argument>
                                    <argument>${project.build.directory}/container-extractors/:/container-extractors</argument>
                                    <argument>-v</argument>
                                    <argument>${project.build.directory}/analysis/:/analysis</argument>
                                    <argument>--entrypoint</argument>
                                    <argument>${ae.extractor.script}</argument>
                                    <argument>${image.id}</argument>
                                </arguments>
                                <outputFile>${project.build.directory}/analysis/docker.extract.out.txt</outputFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>run-file-extractor</id>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <phase>test-compile</phase>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>run</argument>
                                    <argument>--rm</argument>
                                    <argument>-i</argument>
                                    <argument>-v</argument>
                                    <argument>${project.build.directory}/container-extractors/:/container-extractors</argument>
                                    <argument>-v</argument>
                                    <argument>${project.build.directory}/analysis/:/analysis</argument>
                                    <argument>--entrypoint</argument>
                                    <argument>/container-extractors/extract-filtered-files.sh</argument>
                                    <argument>${image.id}</argument>
                                </arguments>
                                <outputFile>${project.build.directory}/analysis/docker.extract-files.out.txt</outputFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.metaeffekt.core</groupId>
                    <artifactId>ae-inventory-maven-plugin</artifactId>
                    <version>${ae.core.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>extract-container-inventory</goal>
                            </goals>
                            <phase>process-test-resources</phase>
                        </execution>
                        <execution>
                            <id>scan-extracted</id>
                            <goals>
                                <goal>create-directory-report</goal>
                            </goals>
                            <phase>test-compile</phase>
                            <configuration>
                                <inputDirectory>${project.build.directory}/analysis/extracted-files</inputDirectory>
                                <scanDirectory>${project.build.directory}/analysis/extracted-scan</scanDirectory>
                                <scanIncludes>**/*</scanIncludes>
                                <scanExcludes>-none-</scanExcludes>
                                <targetInventoryDir>${project.build.directory}/inventory</targetInventoryDir>
                                <targetInventoryPath>${project.artifactId}-extracted-inventory.xls</targetInventoryPath>
                            </configuration>
                        </execution>

                        <execution>
                            <id>merge-inventory</id>
                            <goals>
                                <goal>merge-inventories</goal>
                            </goals>
                            <phase>test-compile</phase>
                            <configuration>
                                <sourceInventory>${project.build.directory}/inventory/${project.artifactId}-extracted-inventory.xls</sourceInventory>
                                <targetInventory>${project.build.directory}/inventory/${project.artifactId}-container-inventory.xls</targetInventory>
                            </configuration>
                        </execution>

                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.metaeffekt.core</groupId>
            <artifactId>ae-inventory-processor</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.metaeffekt.core</groupId>
            <artifactId>ae-inventory-maven-plugin</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.metaeffekt.core</groupId>
            <artifactId>ae-container-validation</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>
